@%@UCRWARNING=# @%@

[automx]
provider = @%@domainname@%@

# We care about any domain that we get a query for
@!@
print 'domains = %s' % (', '.join(configRegistry.get('mail/hosteddomains', '*').split()))
@!@

logfile = /var/log/automx/automx.log
debug = yes
memcache = 127.0.0.1:11211
memcache_ttl = 86400


[DEFAULT]
action = settings

account_type = email

account_name = ${cn} (@%@domainname@%@)
account_name_short = @%@domainname@%@
display_name = ${givenName} ${sn}

smtp = yes
smtp_server = @%@hostname@%@.@%@domainname@%@
smtp_port = 587
smtp_encryption = starttls
smtp_auth = plaintext
smtp_auth_identity = ${mailPrimaryAddress}
smtp_default = yes

imap = yes
imap_server = @%@hostname@%@.@%@domainname@%@
imap_port = 143
imap_encryption = starttls
imap_auth = plaintext
imap_auth_identity = ${mailPrimaryAddress}

pop = no

host = ldap://@%@ldap/master@%@:@%@ldap/master/port@%@
base = @%@ldap/base@%@
result_attrs = mailPrimaryAddress, displayNamem, cn, givenName, sn
scope = sub
filter = (&(objectClass=person)(mailPrimaryAddress=%s))

bindmethod = simple
binddn = @%@ldap/hostdn@%@
@!@
import os
if os.path.exists('/etc/machine.secret'):
    print 'bindpw = %s' % (open('/etc/machine.secret','r').read())
else:
    print 'bindpw = MACHINE.SECRET_IS_MISSING'
@!@
usetls = yes
cacert = /etc/univention/ssl/ucsCA/CAcert.pem

[global]
backend = ldap

